This project is a **Personalized Learning Chatbot** built using **Streamlit** and **Gemini AI (Google Generative AI)**. It allows users to interact with an AI model to ask questions, seek clarification, or learn about various topics. The app is simple, intuitive, and provides an engaging conversational experience.

---

## Features

- **Interactive Chat Interface**: Chat with the AI using natural language input.
- **Gemini AI Integration**: Utilizes Google Generative AI's `gemini-1.5-flash` model for response generation.
- **Persistent Chat History**: Displays previous messages during the session for better continuity.
- **Streamlit UI**: A clean and user-friendly web interface for the chatbot.
- **Error Handling**: Provides clear error messages if API initialization or response generation fails.

---

## Setup Instructions

### Prerequisites

- Python 3.8 or higher
- A valid Gemini API key from Google Generative AI
- Required Python packages: `streamlit`, `google-generativeai`

### Installation

1. Clone the repository:
   ```bash
   git clone https://github.com/your-username/gemini-chatbot.git
   cd gemini-chatbot
   ```

2. Create a virtual environment (optional but recommended):
   ```bash
   python -m venv venv
   source venv/bin/activate  # On Windows: venv\Scripts\activate
   ```

3. Install dependencies:
   ```bash
   pip install -r requirements.txt
   ```

4. Set up the Gemini API key:
   - Add your API key to **Streamlit secrets**:
     1. Create a `.streamlit/secrets.toml` file in the root directory.
     2. Add the following:
        ```toml
        GEMINI_API_KEY = "your_gemini_api_key"
        ```
   - Alternatively, set the key as an environment variable:
     ```bash
     export GEMINI_API_KEY="your_gemini_api_key"
     ```

---

### Running the App

1. Start the Streamlit app:
   ```bash
   streamlit run app.py
   ```

2. Open the app in your web browser using the URL provided in the terminal (default: `http://localhost:8501`).

---

## How to Use

1. **Enter Your Query**: Type your question or prompt in the input box.
2. **Submit Your Input**: Press **Enter** or click **Submit**.
3. **Receive AI Response**: The chatbot will respond with a helpful answer.
4. **Explore Topics**: Ask follow-up questions to dive deeper into topics.

---

## Project Structure

```
gemini-chatbot/
│
├── app.py               # Main Streamlit app code
├── requirements.txt     # Required Python packages
├── .streamlit/          # Streamlit configuration folder
│   └── secrets.toml     # Contains the Gemini API key
└── README.md            # Documentation for the project
```

---

## Troubleshooting

1. **Missing API Key**: Ensure the Gemini API key is correctly configured in `secrets.toml` or as an environment variable.
2. **Dependencies**: Install all dependencies listed in `requirements.txt`.
3. **Errors in Response Generation**: Verify the API key validity and internet connectivity.

---

## Credits

- **Aditi Ubale**: [LinkedIn Profile](https://www.linkedin.com/in/aditi-ubale-8947012b9/)


---

## License

This project is licensed under the MIT License. See the `LICENSE` file for more details.

---

